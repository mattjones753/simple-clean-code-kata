/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Before;
import org.junit.Test;

import static org.assertj.core.api.Assertions.assertThat;


public class ProductPriceCalculatorTest {
    @Before
    public void before() {
        ProductDAO.getInstance().clearProducts();
        UserDAO.getInstance().clearUsers();
    }

    @Test public void shouldFormatProductPrice() {
        ProductPriceCalculator productPriceCalculator = new ProductPriceCalculator();
        String productName = "product-name";
        double price = 10.0;
        ProductDAO.getInstance().addProduct(new Product(productName, price));
        String username = "matt";
        UserDAO.getInstance().addUser(new User(username, true));
        assertThat(productPriceCalculator.formattedPrice(productName, username)).isEqualTo("Â£10.00");
    }

    @Test public void whenProductNotFoundShouldReturnZeroForPrice() {
        ProductPriceCalculator productPriceCalculator = new ProductPriceCalculator();
        assertThat(productPriceCalculator.productPrice("non-existent-product", "username")).isEqualTo(0.);
    }

    @Test public void whenProductFoundAndUserNotEmployeeeShouldReturnProductPrice() {
        ProductPriceCalculator productPriceCalculator = new ProductPriceCalculator();
        String productName = "product-name";
        double price = 10.0;
        ProductDAO.getInstance().addProduct(new Product(productName, price));
        String username = "matt";
        UserDAO.getInstance().addUser(new User(username, false));
        assertThat(productPriceCalculator.productPrice(productName, username)).isEqualTo(price);
    }

    @Test public void whenProductFoundAndUserEmployeeeShouldReturnDiscountedProductPrice() {
        ProductPriceCalculator productPriceCalculator = new ProductPriceCalculator();
        String productName = "product-name";
        double price = 10.0;
        ProductDAO.getInstance().addProduct(new Product(productName, price));
        String username = "matt";
        UserDAO.getInstance().addUser(new User(username, true));
        assertThat(productPriceCalculator.productPrice(productName, username)).isEqualTo(9.5);
    }
}
